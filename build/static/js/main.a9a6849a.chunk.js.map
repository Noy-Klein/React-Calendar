{"version":3,"sources":["components/loader.js","components/table.js","components/addEventForm.js","components/addButton.js","components/currEventModal.js","components/currDaysEvents.js","App.js","serviceWorker.js","store/calendarStore.js","index.js"],"names":["Loader","react_default","a","createElement","className","Component","Table","inject","observer","componentDidMount","window","addEventListener","_this","keyHandling","renderToday","props","store","getEvents","getHolidays","e","daysEventsModal","addEventBtn","keyCode","next","prev","getMonthAxios","getMonthDetails","todaysMonth","ifMonthIs13","ifMonthIs0","renderMonth","demoHTML","demoEvents","i","monthDetails","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","events","Symbol","iterator","done","value","day","month","year","thisYear","push","title","color","id","_id","err","return","length","Date","getDate","getMonth","getFullYear","style","position","onClick","clickDay","key","backgroundColor","borderRadius","padding","openEvent","fontSize","margin","cursor","map","emptyTimes","j","unshift","concat","prevMonth","nextMonth","openCurrModal","clickOnEvent","target","today","returnToToday","getEventsOfDay","openDaysEvents","this","html","es","arrow","placement","content","index_es","size","icon","faArrowLeft","monthNames","faCalendar","faArrowRight","screen","components_loader","AddForm","tild","tilm","currentEvent","location","time","toString","split","tilDay","tilMonth","until","tilYear","date","editStart","editDate","createColors","colorHTML","colors","c","pickColor","validation","alert","saveEvent","newEvent","saveEventChanges","closeAddForm","closeCurrModal","closeDaysEvents","eventEdited","addEvent","eventSaved","openkb","openkeyboard","wantedDay","_this2","pickMonth","colorsArray","wherePlusWasClicked","changeDate","textAlign","backgroundImage","float","goBack","marginRight","faTimes","type","min","name","onChange","change","placeholder","src","alt","height","width","dist_es","showPreview","onSelect","addEmoji","set","border","observable","action","_this3","_this4","_this5","native","val","_this6","AddButton","open","openFromWhere","openAddForm","faPlusCircle","reactjs_popup_es","contentStyle","closeOnDocumentClick","onClose","addEventForm","saved","deleted","edited","CurrentEvent","CurrentDay","deleteEvent","findEvent","wantToDelete","okDelete","confirm","titleToDelete","eventDeleted","close","addEventInDay","edit","wantToEdit","find","d","saveChanges","daysEvents","editMode","App","components_table","modal","currEventModal","currDaysEvents","addButton","Boolean","hostname","match","Store","Axios","get","then","data","delete","wantedEvent","indexInCalendarEvents","indexOf","splice","indexInPopupEvents","bigLetters","letters","smallLetters","document","documentElement","clientWidth","setTimeout","_this7","num","_this8","_this9","_this10","_this11","_this12","_this13","_this14","_this15","_this16","_this17","_this18","_this19","_this20","_this21","_this22","_this23","post","_this24","event","_this25","index","response","holidays","h","end","tilyear","tilmonth","tilday","_this26","image","_this27","ReactDOM","render","index_module","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9a6849a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../cssFiles/loader.css'\r\n\r\nclass Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"spinner\">\r\n                <div className=\"bounce1\"></div>\r\n                <div className=\"bounce2\"></div>\r\n                <div className=\"bounce3\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport Loader from './loader'\r\nimport '../cssFiles/table.css'\r\nimport { observer, inject } from 'mobx-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faArrowLeft, faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport Tooltip from \"react-simple-tooltip\"\r\n\r\n@inject('store')\r\n@observer\r\nclass Table extends Component {\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener(\"keyup\", this.keyHandling);\r\n        this.renderToday()\r\n        this.props.store.getEvents();\r\n        this.props.store.getHolidays();\r\n    }\r\n\r\n    keyHandling = (e) => {\r\n        if (this.props.store.daysEventsModal || this.props.store.addEventBtn) {\r\n            return\r\n        }\r\n        else {\r\n            if (e.keyCode === 39) {\r\n                this.next();\r\n            }\r\n            if (e.keyCode === 37) {\r\n                this.prev();\r\n            }\r\n        }\r\n    }\r\n\r\n    getMonthAxios = () => {\r\n        this.props.store.getMonthDetails();\r\n    }\r\n\r\n    renderToday = () => {\r\n        if (this.props.store.todaysMonth === 13) {\r\n            this.props.store.ifMonthIs13();\r\n            this.props.store.getMonthDetails();\r\n        }\r\n        else if (this.props.store.todaysMonth === 0) {\r\n            this.props.store.ifMonthIs0();\r\n            this.props.store.getMonthDetails();\r\n        }\r\n        else {\r\n            this.props.store.getMonthDetails();\r\n        }\r\n    }\r\n\r\n    renderMonth = () => {\r\n        let demoHTML = []\r\n        let demoEvents = []\r\n        for (let i = 1; i <= this.props.store.monthDetails[1]; i++) {\r\n            for (let e of this.props.store.events) {\r\n                if (e.day === i && e.month === this.props.store.todaysMonth && e.year === this.props.store.thisYear) {\r\n                    demoEvents.push({ title: e.title, color: e.color, id: e._id })\r\n                }\r\n            }\r\n            // console.log(this.props.store.holidays)\r\n            // for(let h of this.props.store.holidays){\r\n            //     // console.log(typeof h.date.day, h.date.day, h.date.month, h.date.year)\r\n            //     if(h.day === i.toString() && h.month === this.props.store.todaysMonth.toString() && h.year === this.props.store.thisYear.toString()){\r\n            //         demoEvents.push({title: h.title, color: h.color, id: h._id})\r\n            //         // console.log(typeof h.date.day, h.date.day, h.date.month, h.date.year)\r\n            //     }\r\n            // }\r\n           \r\n            if (demoEvents.length > 1) {\r\n                if (new Date().getDate() === i && new Date().getMonth() + 1 === this.props.store.todaysMonth && new Date().getFullYear() === this.props.store.thisYear) { // not working ?\r\n                    demoHTML.push(<div style={{ position: 'relative' }} id={i} onClick={this.clickDay} key={i} className='row'><span style={{ backgroundColor: 'blue', color: 'white', borderRadius: '50%', padding: '5px' }}>{i}</span> <div onClick={this.openEvent} id={demoEvents[0].id} style={{ backgroundColor: demoEvents[0].color }} className='event' key={demoEvents[0].title} >{demoEvents[0].title}</div> <div id={demoEvents[0].id} onClick={this.clickDay} style={{ fontSize: '22px', color: 'blue', margin: '0', cursor: 'pointer' }}>...</div> </div>)\r\n                }\r\n                else {\r\n                    demoHTML.push(<div style={{ position: 'relative' }} id={i} onClick={this.clickDay} key={i} className='row'>{i} <div onClick={this.openEvent} id={demoEvents[0].id} style={{ backgroundColor: demoEvents[0].color }} className='event' key={demoEvents[0].title} >{demoEvents[0].title}</div> <div id={demoEvents[0].id} onClick={this.clickDay} style={{ fontSize: '22px', color: 'blue', margin: '0', cursor: 'pointer' }}>...</div> </div>)\r\n                }\r\n            }\r\n            else {\r\n                if (new Date().getDate() === i && new Date().getMonth() + 1 === this.props.store.todaysMonth && new Date().getFullYear() === this.props.store.thisYear) {\r\n                    demoHTML.push(<div style={{ position: 'relative' }} id={i} onClick={this.clickDay} key={i} className='row'><span style={{ backgroundColor: 'blue', color: 'white', borderRadius: '50%', padding: '5px' }}>{i}</span> {demoEvents.map(e => { return <div onClick={this.openEvent} id={e.id} style={{ backgroundColor: e.color }} className='event' key={e.title} >{e.title}</div> })}</div>)\r\n                }\r\n                else {\r\n                    demoHTML.push(<div style={{ position: 'relative' }} id={i} onClick={this.clickDay} key={i} className='row'>{i} {demoEvents.map(e => { return <div onClick={this.openEvent} id={e.id} style={{ backgroundColor: e.color }} className='event' key={e.title} >{e.title}</div> })}</div>)\r\n                }\r\n            }\r\n            demoEvents = []\r\n        }\r\n        if (this.props.store.monthDetails[0] === 8) {\r\n            return demoHTML\r\n        }\r\n        else {\r\n            let emptyTimes = this.props.store.monthDetails[0] - 1;\r\n            for (let j = 0; j < emptyTimes; j++) {\r\n                demoHTML.unshift(<div style={{backgroundColor: 'rgba(172, 172, 172, 0.432)'}} key={`emptydate${j}`} className='row'></div>)\r\n            }\r\n            return demoHTML\r\n        }\r\n    }\r\n\r\n    prev = () => {\r\n        this.props.store.prevMonth();\r\n        this.renderToday()\r\n        this.props.store.getEvents()\r\n    }\r\n\r\n    next = () => {\r\n        this.props.store.nextMonth();\r\n        this.renderToday()\r\n        this.props.store.getEvents()\r\n    }\r\n\r\n    openEvent = (e) => {\r\n        this.props.store.openCurrModal();\r\n        this.props.store.clickOnEvent(e.target.id) // finds the id of the event\r\n    }\r\n\r\n    today = () => {\r\n        this.props.store.returnToToday()\r\n        this.renderToday()\r\n        this.props.store.getEvents()\r\n    }\r\n\r\n    clickDay = (e) => {\r\n        this.props.store.getEventsOfDay(e.target.id)\r\n        this.props.store.openDaysEvents();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.store.events) {\r\n            let html = this.renderMonth();\r\n            return (\r\n                <div>\r\n                    <div className='header'>\r\n                        <div className='prev'><Tooltip className='tooltip' arrow={6} fontSize='10px' placement='right' content='Try Your Left Key!'><span style={{ cursor: 'pointer' }} onClick={this.prev}><FontAwesomeIcon size='2x' icon={faArrowLeft} /></span></Tooltip></div>\r\n                        <h1 className='monthName'>{this.props.store.monthNames[this.props.store.todaysMonth]} {this.props.store.thisYear}\r\n                            {this.props.store.todaysMonth !== new Date().getMonth() + 1 || this.props.store.thisYear !== new Date().getFullYear() ?\r\n                                <span className='backToToday'>\r\n                                    <Tooltip arrow={6} fontSize='10px' placement='right' content='Back To Today'><FontAwesomeIcon onClick={this.today} icon={faCalendar} /></Tooltip>\r\n                                </span>\r\n                                :\r\n                                null\r\n                            }\r\n                        </h1>\r\n                        <div className='next'><Tooltip className='tooltip' arrow={6} fontSize='10px' placement='left' content='Try Your Right Key!'><span style={{ cursor: 'pointer' }} onClick={this.next}><FontAwesomeIcon size='2x' icon={faArrowRight} /></span></Tooltip></div>\r\n                    </div>\r\n                    {/* {this.props.store.screen < 1019 ? this.props.store.smallLetters() : this.props.store.bigLetters()} */}\r\n                    <div className='container'>\r\n                        <div className='row dayinweek'>{this.props.store.screen > 1019 ? 'Sunday' : 'Sun'}</div>\r\n                        <div className='row dayinweek'>{this.props.store.screen > 1019 ? 'Monday' : 'Mon'}</div>\r\n                        <div className='row dayinweek'>{this.props.store.screen > 1019 ? 'Tuesday' : 'Tue'}</div>\r\n                        <div className='row dayinweek'>{this.props.store.screen > 1019 ? 'Wednesday' : 'Wed'}</div>\r\n                        <div className='row dayinweek'>{this.props.store.screen > 1019 ? 'Thursday' : 'Thu'}</div>\r\n                        <div className='row dayinweek'>{this.props.store.screen > 1019 ? 'Friday' : 'Fri'}</div>\r\n                        <div className='row dayinweek'>{this.props.store.screen > 1019 ? 'Saturday' : 'Sat'}</div>\r\n                        {html}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Loader />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport '../cssFiles/form.css';\r\nimport { Picker } from 'emoji-mart'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n@inject('store')\r\n@observer\r\nclass AddForm extends Component {\r\n\r\n    @observable editDate = false;\r\n\r\n    @observable title = '';\r\n    @observable location = '';\r\n    @observable time = '';\r\n    @observable color = '';\r\n    @observable date = '';\r\n    @observable until = '';\r\n\r\n    @observable colors = ['#bebebe', '#ff4500', '#20b2aa', '#87cefa', '#dda0dd', '#f4a460', '#db7093']\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.currentEvent) {\r\n            this.props.store.color = this.props.currentEvent.color;\r\n            this.color = this.props.currentEvent.color;\r\n            this.location = this.props.currentEvent.location;\r\n            this.title = this.props.currentEvent.title;\r\n            this.time = this.props.currentEvent.time;\r\n            let day;\r\n            let month;\r\n            if(this.props.currentEvent.day.toString().split('').length === 1){\r\n                day = '0' + this.props.currentEvent.day\r\n            }\r\n            else{\r\n                day = this.props.currentEvent.day\r\n            }\r\n            if(this.props.currentEvent.month.toString().split('').length === 1){\r\n                month = '0' + this.props.currentEvent.month\r\n            }\r\n            else{\r\n                month = this.props.currentEvent.month\r\n            }\r\n            let tild;\r\n            let tilm;\r\n            if(this.props.currentEvent.tilDay.toString().split('').length === 1){\r\n                tild = '0' + this.props.currentEvent.tilDay\r\n            }\r\n            else{\r\n                tild = this.props.currentEvent.tilDay\r\n            }\r\n            if(this.props.currentEvent.tilMonth.toString().split('').length === 1){\r\n                tilm = '0' + this.props.currentEvent.tilMonth\r\n            }\r\n            else{\r\n                tilm = this.props.currentEvent.tilMonth\r\n            }\r\n            this.until = `${this.props.currentEvent.tilYear}-${tilm}-${tild}`\r\n            this.date = `${this.props.currentEvent.year}-${month}-${day}`\r\n        }\r\n    }\r\n\r\n    editStart = () => {\r\n        this.editDate = true;\r\n    }\r\n\r\n    createColors = () => {\r\n        let colorHTML = [];\r\n        for (let c of this.colors) {\r\n            colorHTML.push(<div key={c} className='colorOption' id={c} onClick={this.pickColor} style={{ backgroundColor: c }}></div>)\r\n        }\r\n        return colorHTML\r\n    }\r\n\r\n    @action pickColor = (e) => {\r\n        this.props.store.color = e.target.id;\r\n        this.color = e.target.id;\r\n    }\r\n\r\n    @action change = (e) => {\r\n        this[e.target.name] = e.target.value;\r\n    }\r\n\r\n    validation = () => {\r\n        if (!this.date || !this.title || !this.location || !this.time || !this.color) {\r\n            if (!this.date) {\r\n                alert('You Forgot To Enter A Date...')\r\n                return 0\r\n            }\r\n            if (!this.title) {\r\n                alert('You Forgot To Enter A Title')\r\n                return 0\r\n            }\r\n            if (!this.location) {\r\n                alert('You Forgot To Enter A Location...')\r\n                return 0\r\n            }\r\n            if (!this.time) {\r\n                alert('You Forgot To Enter A Time...')\r\n                return 0\r\n            }\r\n            if (!this.color) {\r\n                alert('You Forgot To Enter A Background Color...')\r\n                return 0\r\n            }\r\n        }\r\n        else {\r\n            return 1\r\n        }\r\n    }\r\n\r\n    saveEvent = () => {\r\n        let validate = this.validation();\r\n        if (validate === 0) {\r\n            return\r\n        }\r\n        let day = this.date.split('-')[2];\r\n        if (day.split('')[0] === '0') {\r\n            day = day.split('')[1]\r\n        }\r\n        let month = this.date.split('-')[1];\r\n        if (month.split('')[0] === '0') {\r\n            month = month.split('')[1]\r\n        }\r\n        let year = this.date.split('-')[0];\r\n        let tilDay;\r\n        let tilMonth;\r\n        let tilYear;\r\n        if (!this.until) {\r\n            tilDay = day;\r\n            tilMonth = month;\r\n            tilYear = year;\r\n        }\r\n        else {\r\n            tilDay = this.until.split('-')[2]\r\n            if (tilDay.split('')[0] === '0') {\r\n                tilDay = tilDay.split('')[1]\r\n            }\r\n\r\n\r\n            tilMonth = this.until.split('-')[1]\r\n            if (tilMonth.split('')[0] === '0') {\r\n                tilMonth = tilMonth.split('')[1]\r\n            }\r\n\r\n            tilYear = this.until.split('-')[0]\r\n        }\r\n        if(tilDay < day && tilMonth <= month){\r\n            tilDay = day;\r\n            tilMonth = month;\r\n        }\r\n        let newEvent = {\r\n            title: this.title,\r\n            day: day,\r\n            month: month,\r\n            year: year,\r\n            time: this.time,\r\n            tilDay: tilDay,\r\n            tilMonth: tilMonth,\r\n            tilYear: tilYear,\r\n            location: this.location,\r\n            color: this.color\r\n        }\r\n        if (this.props.currentEvent) {\r\n            newEvent._id = this.props.currentEvent._id;\r\n            this.props.store.saveEventChanges(newEvent);\r\n            this.props.store.closeAddForm();\r\n            this.props.store.closeCurrModal();\r\n            this.props.store.closeDaysEvents();\r\n            this.props.store.eventEdited()\r\n        }\r\n        else {\r\n            this.props.store.addEvent(newEvent);\r\n            this.props.store.closeAddForm();\r\n            this.props.store.eventSaved();\r\n        }\r\n    }\r\n\r\n    openkb = () => {\r\n        this.props.store.openkeyboard();\r\n    }\r\n\r\n    @action addEmoji = (e) => {\r\n        this.title += e.native;\r\n    }\r\n\r\n    @action changeDate = (val) => {\r\n        this.date = val;\r\n    }\r\n\r\n    render() {\r\n        let wantedDay;\r\n        let pickMonth = (this.props.store.todaysMonth).toString();\r\n        if (pickMonth.split('').length === 1) {\r\n            pickMonth = '0' + pickMonth;\r\n        }\r\n        let colorsArray = this.createColors();\r\n        if (this.props.store.wantedDay && this.props.store.wantedDay.split('').length === 1) {\r\n            wantedDay = '0' + this.props.store.wantedDay\r\n        }\r\n        else {\r\n            wantedDay = this.props.store.wantedDay\r\n        }\r\n        if (this.props.store.wherePlusWasClicked === 1) {\r\n            this.changeDate(this.props.store.thisYear + '-' + pickMonth + '-' + wantedDay)\r\n        }\r\n        return (\r\n            <div style={{ textAlign: 'center', backgroundImage: `linear-gradient(-90deg, ${this.color}, ${this.color}, blue)` }} className='formContainer'>\r\n                {this.props.currentEvent ?\r\n                    <div style={{ float: 'left' }} className='x' onClick={this.props.store.goBack}><FontAwesomeIcon icon={faArrowLeft} size='1x' /></div>\r\n                    :\r\n                    <div className='x' style={{ float: 'right', marginRight: '5px' }} onClick={this.props.store.closeAddForm}><FontAwesomeIcon icon={faTimes} size='1x' /></div>\r\n\r\n                }\r\n                <h2 className='title addTitle'>Add An Event</h2>\r\n\r\n                <span><div className='category'>Start: </div><input className='input' type='date' min={this.props.store.thisYear + '-' + pickMonth + '-01'} name='date' value={this.date} onChange={this.change} /></span><br />\r\n                \r\n                {this.props.store.wherePlusWasClicked === 0 ?\r\n                    <span><div className='category'>End: </div><input className='input' type='date' min={this.props.store.thisYear + '-' + pickMonth + '-01'} name='until' value={this.until} onChange={this.change} /></span>\r\n                    :\r\n                    <span><span className='category'>End: </span><input className='input' type='date' min={this.props.store.thisYear + '-' + pickMonth + '-' + wantedDay} name='until' value={this.until} onChange={this.change} /></span>\r\n                }<br />\r\n\r\n                <div className='category'>Title: </div><input className='input shorter' type='text' placeholder='Title' name='title' value={this.title} onChange={this.change} /><button className='emoji' type='button' onClick={this.openkb}>{this.props.store.openkb ? <img src='https://png.pngtree.com/svg/20160826/keyboard_486414.png' alt='keyboard' height='15px' width='15px' /> : <img height='15px' width='15px' src='https://png.pngtree.com/svg/20170620/emoji_happy_1159202.png' alt='emoji' />}</button><br />\r\n                {this.props.store.openkb ? <div><Picker showPreview={false} onSelect={this.addEmoji} set='emojione' /></div> : null}\r\n                 {/* try to put the picker in a popup  */}\r\n                <div className='category'>Location :</div><input className='input' type='text' placeholder='Location' name='location' value={this.location} onChange={this.change} /><br />\r\n                <div className='category'>Time: </div><input className='input' type='time' placeholder='From' name='time' value={this.time} onChange={this.change} />\r\n                <div className='title addTitle'>Pick A Background Color:</div>\r\n                <div className='colorContainer'>\r\n                    {colorsArray.map(c => {\r\n                        if (c.props.style.backgroundColor === this.color) {\r\n                            c.props.style.border = '2px solid black';\r\n                            c.props.style.height = '36px';\r\n                            c.props.style.width = '36px';\r\n                            return c\r\n                        }\r\n                        else {\r\n                            return c\r\n                        }\r\n                    })\r\n                    }\r\n                </div>\r\n                <button type='button' className='btn addTitle' onClick={this.saveEvent} >Save</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddForm;","import React, { Component } from 'react';\r\nimport '../cssFiles/App.css';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Tooltip from \"react-simple-tooltip\"\r\nimport Popup from \"reactjs-popup\";\r\nimport AddForm from './addEventForm';\r\n\r\n@inject('store')\r\n@observer\r\nclass AddButton extends Component {\r\n\r\n    open = () => {\r\n        this.props.store.color = null\r\n        this.props.store.openFromWhere(0)\r\n        this.props.store.openAddForm()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='addEvent'>\r\n                    <Tooltip arrow={6} fontSize='15px' placement='left' content='Add A New Event'>\r\n                        <div onClick={this.open}><FontAwesomeIcon size='3x' icon={faPlusCircle} /></div>\r\n                        <Popup contentStyle={{backgroundImage: `linear-gradient(-90deg, ${this.props.store.color}, ${this.props.store.color}, blue)`, border: 'none'}} open={this.props.store.addEventBtn}\r\n                            closeOnDocumentClick\r\n                            onClose={this.props.store.closeAddForm}>\r\n                            <AddForm />\r\n                        </Popup>\r\n                    </Tooltip>\r\n                </div>\r\n                \r\n                {this.props.store.saved ?\r\n                    <div className='savedMessage'>Your Event Was Saved Successfully!</div>\r\n                    :\r\n                    null\r\n                }\r\n                {this.props.store.deleted ?\r\n                    <div className='savedMessage'>Your Event Was Deleted</div>\r\n                    :\r\n                    null\r\n                }\r\n                {this.props.store.edited ?\r\n                    <div className='savedMessage'>Your Changes Were Saved</div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddButton;","import React, { Component } from 'react';\r\nimport '../cssFiles/App.css';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject('store')\r\n@observer\r\nclass CurrentEvent extends Component {\r\n    render() { // maybe open the modal when a day is clicked? and not a event?\r\n        if (this.props.store.currentEvent) {\r\n            return (\r\n                <div className='formContainer'>\r\n                <span  className='x' style={{float: 'right', marginRight: '5px'}} onClick={this.props.store.closeCurrModal}>X</span>\r\n                    <div>{this.props.store.currentEvent.title}</div> \r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default CurrentEvent;","import React, { Component } from 'react';\r\nimport '../cssFiles/App.css';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Popup from \"reactjs-popup\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle, faTimes, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport Tooltip from \"react-simple-tooltip\";\r\nimport { observable, action } from \"mobx\";\r\nimport Loader from './loader';\r\nimport AddForm from './addEventForm';\r\n\r\n@inject('store')\r\n@observer\r\nclass CurrentDay extends Component {\r\n\r\n    @observable wantToDelete = false;\r\n    @observable okDelete = false;\r\n    @observable titleToDelete = null;\r\n\r\n    @observable currentEvent = null;\r\n\r\n    @action close = () => {\r\n        this.wantToDelete = false;\r\n    }\r\n\r\n    @action findEvent = (id) => {\r\n        if (id === null) {\r\n            this.titleToDelete = null;\r\n        }\r\n        else {\r\n            this.titleToDelete = this.props.store.daysEvents.find(d => d._id === id)\r\n        }\r\n\r\n    }\r\n\r\n    deleteEvent = (e) => {\r\n        this.findEvent(e.target.id)\r\n        this.wantToDelete = true;\r\n        this.okDelete = window.confirm(`Are You Sure You Want To Delete \"${this.titleToDelete.title}\" ?`)\r\n        if (this.okDelete) {\r\n            this.props.store.deleteEvent(e.target.id)\r\n            this.props.store.eventDeleted()\r\n            this.close()\r\n            this.props.store.closeDaysEvents()\r\n        }\r\n        else {\r\n            this.wantToDelete = false;\r\n        }\r\n        this.findEvent(null);\r\n    }\r\n\r\n    addEventInDay = () => {\r\n        this.props.store.openFromWhere(1)\r\n        this.props.store.openAddForm();\r\n    }\r\n\r\n    edit = (e) => {\r\n        this.props.store.wantToEdit();\r\n        this.currentEvent = this.props.store.events.find(d => d._id === e.target.id)\r\n    }\r\n\r\n    saveChanges = () => {\r\n        this.props.store.saveChanges()\r\n    }\r\n\r\n    render() {\r\n        if (this.props.store.daysEvents && this.props.store.daysEvents.length > 0) {\r\n            return (\r\n                <Popup open={this.props.store.daysEventsModal}\r\n                    closeOnDocumentClick\r\n                    onClose={this.props.store.closeDaysEvents}>\r\n                    <div className='scroll'>\r\n                        {/* how to scroll through events? */}\r\n                        {!this.props.store.editMode ?\r\n                            <div style={{ float: 'right' }} className='x' onClick={this.props.store.closeDaysEvents}><FontAwesomeIcon icon={faTimes} size='1x' /></div>\r\n\r\n                            : null}\r\n\r\n                        {this.props.store.editMode ?\r\n                            <AddForm currentEvent={this.currentEvent} />\r\n                            :\r\n                            <div><h3 className='title'>Events On {this.props.store.wantedDay}/{this.props.store.todaysMonth}/{this.props.store.thisYear}</h3>\r\n                                <div>{this.props.store.daysEvents.map(d => {\r\n                                    return (\r\n                                        <div className='eventInPopup' style={{ backgroundImage: `linear-gradient(-90deg, ${d.color}, ${d.color}, blue)` }} key={d._id}>\r\n                                            <div className='title'><h4>{d.title}</h4></div>\r\n                                            <div>From : {d.day}/{d.month}/{d.year}</div>\r\n                                            {(d.day === d.tilDay && d.month === d.tilMonth && d.year === d.tilYear) || (!d.tilDay) ?\r\n                                                <div>Until : {d.day}/{d.month}/{d.year}</div>\r\n                                                :\r\n                                                <div>Until : {d.tilDay}/{d.tilMonth}/{d.tilYear}</div>\r\n                                            }\r\n\r\n                                            <div>Location: {d.location}</div>\r\n                                            <div>Time: {d.time}</div>\r\n                                            <div className='trash clickable'><img id={d._id} onClick={this.deleteEvent} height='20px' width='20px' src='http://freevector.co/wp-content/uploads/2012/02/65186-trash-can.png' alt='trash' /></div>\r\n                                            <div className='editbtn clickable'><img id={d._id} onClick={this.edit} alt='edit' src='https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Edit_font_awesome.svg/512px-Edit_font_awesome.svg.png' height='20px' width='20px' /></div>\r\n                                        </div>\r\n                                    )\r\n                                })}</div>\r\n                                <br /><br /><div className='addOnDay'><Tooltip arrow={6} fontSize='15px' placement='top' content='Add An Event For This Day'><div onClick={this.addEventInDay} ><FontAwesomeIcon size='2x' icon={faPlusCircle} /></div></Tooltip></div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                </Popup>\r\n            )\r\n        }\r\n        else if (this.props.store.daysEvents && this.props.store.daysEvents.length === 0) {\r\n            return (\r\n                <Popup className=\"modal\" open={this.props.store.daysEventsModal}\r\n                    closeOnDocumentClick\r\n                    onClose={this.props.store.closeDaysEvents}>\r\n                    <div>\r\n                        <div style={{ float: 'right' }} className='x' onClick={this.props.store.closeDaysEvents}>X</div>\r\n                        <div className='noEvents'><p>No Events For This Day Yet...</p></div>\r\n                        <div className='addOnDay'><Tooltip arrow={6} fontSize='15px' placement='left' content='Add An Event For This Day'><div onClick={this.addEventInDay} ><FontAwesomeIcon size='2x' icon={faPlusCircle} /></div></Tooltip></div>\r\n                    </div>\r\n                </Popup>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Popup open={this.props.store.daysEventsModal}\r\n                    closeOnDocumentClick\r\n                    onClose={this.props.store.closeDaysEvents}>\r\n                    <Loader />\r\n                </Popup>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default CurrentDay;","import React, { Component } from 'react';\nimport './cssFiles/App.css';\n// import Timer from './components/timer';\nimport Table from './components/table';\nimport { observer, inject } from 'mobx-react';\nimport AddButton from './components/addButton';\nimport CurrentEvent from './components/currEventModal';\nimport CurrentDay from './components/currDaysEvents';\n\n@inject('store')\n@observer\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Table />\n        {this.props.store.modal ? <CurrentEvent /> : null}\n        <CurrentDay />\n        <AddButton />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from \"mobx\";\r\nimport Axios from 'axios';\r\n\r\nclass CalendarStore {\r\n    @observable color = null;\r\n    @observable eventToEdit = null;\r\n    @observable editMode = false;\r\n    @observable edited = false;\r\n    @observable deleted = false;\r\n    @observable saved = false;\r\n    @observable letters = false\r\n    @observable wherePlusWasClicked = 0;\r\n    @observable wantedDay = null\r\n    @observable screen = document.documentElement.clientWidth;\r\n    @observable customColor = null;\r\n    @observable openkb = false;\r\n    @observable daysEventsModal = false;\r\n    @observable modal = false;\r\n    @observable currentEvent = null;\r\n    @observable daysEvents = [];\r\n    @observable addEventBtn = false;\r\n    @observable events = [];\r\n    @observable monthDetails = [];\r\n    @observable thisYear = new Date().getFullYear();\r\n    @observable todaysMonth = new Date().getMonth() + 1;\r\n    @observable monthNames = ['none', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    @observable holidays = [];\r\n\r\n    @action wantToEdit = () => {\r\n        this.editMode = true;\r\n    }\r\n\r\n    @action saveChanges = () => {\r\n        this.editMode = false;\r\n    }\r\n\r\n    @action goBack = () => {\r\n        this.editMode = false;\r\n    }\r\n\r\n    @action eventEdited = () => {\r\n        this.edited = true;\r\n        setTimeout(() => {\r\n            this.edited = false;\r\n        }, 2000);\r\n    }\r\n\r\n    @action eventSaved = () => {\r\n        this.saved = true;\r\n        setTimeout(() => {\r\n            this.saved = false;\r\n        }, 2000);\r\n    }\r\n\r\n    @action eventDeleted = () => {\r\n        this.deleted = true;\r\n        setTimeout(() => {\r\n            this.deleted = false;\r\n        }, 2000);\r\n    }\r\n\r\n    @action openFromWhere = (num) => {\r\n        this.color = null;\r\n        this.wherePlusWasClicked = num;\r\n    }\r\n\r\n    @action openkeyboard = () => {\r\n        this.openkb = !this.openkb;\r\n    }\r\n\r\n    @action closekeyboard = () => {\r\n        this.openkb = false;\r\n    }\r\n\r\n    @action openDaysEvents = () => {\r\n        this.modal = false;\r\n        this.addEventBtn = false;\r\n        this.daysEventsModal = true;\r\n    }\r\n\r\n    @action closeDaysEvents = () => {\r\n        // if(this.editMode){\r\n        //     this.wantToSaveChanges = window.confirm('are you sure you want to exit? it wont save your changes...')\r\n        // }\r\n        // if(this.wantToSaveChanges){\r\n            this.daysEventsModal = false;\r\n            this.editMode = false;\r\n        // }\r\n        // else{\r\n        //     return;\r\n        // }\r\n    }\r\n\r\n    @action openCurrModal = () => {\r\n        this.daysEventsModal = false;\r\n        this.addEventBtn = false;\r\n        this.modal = true;\r\n    }\r\n\r\n    @action closeCurrModal = () => {\r\n        this.modal = false;\r\n    }\r\n\r\n    @action returnToToday = () => {\r\n        this.thisYear = new Date().getFullYear();\r\n        this.todaysMonth = new Date().getMonth() + 1;\r\n    }\r\n\r\n    @action openAddForm = () => {\r\n        this.daysEventsModal = false;\r\n        this.modal = false;\r\n        this.addEventBtn = true;\r\n    }\r\n\r\n    @action closeAddForm = () => {\r\n        this.addEventBtn = false;\r\n    }\r\n\r\n    @action getEvents = () => {\r\n        Axios.get('/allevents').then((data) => {\r\n            this.events = data.data\r\n        })\r\n    }\r\n\r\n    @action getMonthDetails = () => {\r\n        Axios.get(`/getdays/${this.thisYear}/${this.todaysMonth}`).then((data) => {\r\n            this.monthDetails = data.data;\r\n            this.monthDetails[0] += 2;\r\n        })\r\n    }\r\n\r\n    @action nextMonth = () => {\r\n        this.todaysMonth += 1;\r\n    }\r\n\r\n    @action prevMonth = () => {\r\n        this.todaysMonth -= 1;\r\n    }\r\n\r\n    @action ifMonthIs13 = () => {\r\n        this.thisYear = this.thisYear + 1;\r\n        this.todaysMonth = 1;\r\n    }\r\n\r\n    @action ifMonthIs0 = () => {\r\n        this.thisYear = this.thisYear - 1;\r\n        this.todaysMonth = 12;\r\n    }\r\n\r\n    @action addEvent = (newEvent) => {\r\n        Axios.post('/addevent', newEvent).then((data) => {\r\n            this.events.push(data.data)\r\n        })\r\n    }\r\n\r\n    @action saveEventChanges = (edited) => {\r\n        Axios.post('/editEvent' , edited).then((data)=>{\r\n            let event = this.events.find(e => e._id === edited._id)\r\n            let index = this.events.indexOf(event)\r\n            this.events.splice(index,1 ,edited);\r\n            this.getEvents()\r\n        })\r\n    }\r\n\r\n    clickOnEvent = (id) => {\r\n        Axios.get('/findEvent/' + id).then((data) => {\r\n            this.currentEvent = data.data;\r\n        })\r\n    }\r\n\r\n    getEventsOfDay = (day) => {\r\n        let wantedDay;\r\n        if (day.split('').length > 2) {\r\n            Axios.get('/findEvent/' + day).then((data) => {\r\n                wantedDay = (data.data.day).toString();\r\n                this.wantedDay = wantedDay\r\n            }).then(() => {\r\n                Axios.get(`/findByDate/${wantedDay}/${this.todaysMonth}/${this.thisYear}`).then((data) => {\r\n                    this.daysEvents = data.data\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            wantedDay = day;\r\n            this.wantedDay = wantedDay\r\n            Axios.get(`/findByDate/${wantedDay}/${this.todaysMonth}/${this.thisYear}`).then((data) => {\r\n                this.daysEvents = data.data\r\n            })\r\n        }\r\n        // let holiday = this.holidays.find(h => h.title === day)\r\n        // if(holiday){\r\n        //     this.daysEvents.push(holiday)\r\n        //     console.log(holiday)\r\n        // }\r\n        // console.log(this.daysEvents)\r\n    }\r\n\r\n    deleteEvent = (id) => {\r\n        Axios.delete('/deleteevent/' + id).then((data) => {\r\n            let wantedEvent = this.events.find(e => e._id === id);\r\n            let indexInCalendarEvents = this.events.indexOf(wantedEvent);\r\n            this.events.splice(indexInCalendarEvents, 1);\r\n            let indexInPopupEvents = this.daysEvents.indexOf(wantedEvent);\r\n            this.daysEvents.splice(indexInPopupEvents, 1)\r\n        })\r\n    }\r\n\r\n    @action getHolidays = () => {\r\n        Axios.get('https://www.calendarindex.com/api/v1/holidays?country=US&year=2018&api_key=fb7b2b3d41fbfcdb55e4d92d781187fe203caea3').then((data) => {\r\n            data.data.response.holidays.map(h => {\r\n                let date = h.date.split('-')\r\n                let year = date[0]\r\n                let month = date[1]\r\n                let day = date[2].split(' ')[0]\r\n                if (day.split('')[0] === '0') {\r\n                    day = day.split('')[1]\r\n                }\r\n                if (month.split('')[0] === '0') {\r\n                    month = month.split('')[1]\r\n                }\r\n                let until = h.end.split('-');\r\n                let tilyear = until[0];\r\n                let tilmonth = until[1];\r\n                let tilday = until[2][0] + '' + until[2][1];\r\n                let image;\r\n                // Axios.get(`https://www.googleapis.com/customsearch/v1?key=AIzaSyA-NDun_On5Bx3TerMVbAaC8jfU7jotv8M&cx=014991769965957097369:idopkmpkkbo&q=${h.name}&?searchType=Image&defaultToImageSearch=true&safe=active`).then((data)=>{\r\n                //     image = data.data.items[0].pagemap.imageobject[0].thumbnailurl\r\n                // })\r\n                this.holidays.push({\r\n                    _id: h.name,\r\n                    title: h.name,\r\n                    day: day,\r\n                    month: month,\r\n                    year: year,\r\n                    time: '00:00',\r\n                    tilDay: tilday,\r\n                    tilmonth: tilmonth,\r\n                    tilYear: tilyear,\r\n                    location: '',\r\n                    image: image,\r\n                    color: '#66cdaa'\r\n                })\r\n                // Axios.post('http://localhost:2222/getdays/holidays', this.holidays)\r\n            })\r\n        })\r\n    }\r\n\r\n    bigLetters = () => {\r\n        this.letters = false;\r\n    }\r\n\r\n    smallLetters = () => {\r\n        this.letters = true;\r\n    }\r\n\r\n    @action goToTheEventsDay = (month, year) => {\r\n        this.todaysMonth = month;\r\n        this.thisYear = year;\r\n    }\r\n\r\n}\r\n\r\nconst Store = new CalendarStore();\r\n\r\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'mobx-react';\n// var FontAwesome = require('react-fontawesome');\nimport store from './store/calendarStore';\n\nwindow.store = store;\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}